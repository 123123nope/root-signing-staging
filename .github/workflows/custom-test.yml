name: root-signing repository tests with a Sigstore client

on:
  workflow_call:
    inputs:
      metadata_url:
        description: "URL of the sigstore staging TUF repository to test"
        required: true
        type: string

permissions: {}

jobs:
  sigstore-python:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write' # For signing with the GitHub workflow identity
    env:
      STAGING_URL: ${{ inputs.metadata_url }}
    steps:
      - uses: actions/setup-python@82c7e631bb3cdc910f68e0081d67478d79c6982d # v5.1.0
        with:
          python-version: '3.11'

      - name: Install sigstore-python, tweak it to use the published TUF repository
        run: |
          pip install sigstore

          # tweak sigstore sources to use our publish URL
          # TODO: remove this once sigstore-python supports "--tuf-url" or similar
          SITE_PACKAGES=$(pip show sigstore | sed -n "s/^Location: //p")
          TUF_PY="$SITE_PACKAGES/sigstore/_internal/tuf.py"

          sed -ie "s#^STAGING_TUF_URL = .*#STAGING_TUF_URL = \"$STAGING_URL\"#" "$TUF_PY"

      - name: Test published repository with sigstore-python
        run: |
          IDENTITY="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/.github/workflows/custom-test.yml@$GITHUB_REF"
          touch artifact
          # sign, then verify using this workflows oidc identity
          python -m sigstore -vv --staging sign artifact
          python -m sigstore --staging verify github --cert-identity $IDENTITY artifact

  cosign:
    runs-on: ubuntu-latest
    permissions:
      id-token: 'write' # For signing with the GitHub workflow identity
    env:
      STAGING_URL: ${{ inputs.metadata_url }}
    steps:
      - uses: sigstore/cosign-installer@59acb6260d9c0ba8f4a2f9d9b48431a222b68e20 # v3.5.0

      - name: Download initial root
        run: curl -o root.json ${STAGING_URL}/1.root.json

      - name: Test published repository with cosign
        run: |
          IDENTITY="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/.github/workflows/custom-test.yml@$GITHUB_REF"
          touch artifact

          # initialize from the published repository
          cosign initialize --root root.json --mirror ${STAGING_URL}

          # sign, then verify using this workflows oidc identity
          cosign sign-blob \
              --yes \
              --fulcio-url https://fulcio.sigstage.dev \
              --oidc-issuer https://oauth2.sigstage.dev/auth \
              --rekor-url https://rekor.sigstage.dev \
              --bundle bundle.json \
              artifact

          cosign verify-blob \
              --certificate-identity $IDENTITY \
              --certificate-oidc-issuer https://token.actions.githubusercontent.com \
              --bundle bundle.json \
              artifact